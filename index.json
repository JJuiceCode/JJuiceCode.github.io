

















































[{"categories":["study"],"contents":"시작하기에 앞서.. 웹과 관련된 JS코드들 중 가장 많이 사용하는 것이 무엇일까 생각해보았다.\n개인적으로 생각하기에는 HTML 문서를 JS로 제어하기 위해 documment 객체의 다양한 메소드를 이용해 요소(Element)를 가져와서(or DOM 노드에 접근해서) 변수에 할당한 후 다양하게 활용하는 코드들이였다.\n아래 코드들이 그 예시이다.\nex.1)\n1\u0026lt;div id=\u0026#34;container\u0026#34;\u0026gt; 2\t\u0026lt;h1\u0026gt;H1 container text\u0026lt;/h1\u0026gt; 3\u0026lt;/div\u0026gt; 1const cont = document.getElementById(\u0026#34;container\u0026#34;); 2console.log(cont); ex.2)\n1\u0026lt;div class=\u0026#34;item\u0026#34;\u0026gt; 2\t\u0026lt;p\u0026gt;This is a item\u0026lt;/p\u0026gt; 3\u0026lt;/div\u0026gt; 1const item = document.getElementsByClassName(\u0026#34;item\u0026#34;); 2console.log(item); 위의 예제에서 본 것 처럼 document 객체의 getElementById 메서드인지 아니면 getElementsByClassName 메서드인지 return하는 결과값이 다르다.\ndocument객체에는 이처럼 노드 요소에 접근하는 메서드 뿐만 아니라 다양한 메서드들이 존재한다. 문득 document 객체는 뭐하는 놈인지 브라우저에서 어떤 역할을 하는지 제대로 이해하고 넘어가고 싶은 생각이 들었다.\nDocument 단어적 의미 네이버 영어사전에 document 를 쳐보았다.\n docu·ment : \u0026lt;명사\u0026gt; 서류,문서 | (컴퓨터의) 문서 (파일)  Document 검색 자료 피드백 잠시 관련 자료를 검색한 내용을 살펴보자.\n1.구글 검색 : MDN Web Docs 가장 첫 번째로 나온 것 검색 결과물은 예상대로 MDN Web Docs \u0026amp;gt; Document 자료(한글 번역)이다. 아래와 같이 document 에 대해 정의되어 있다.\n Document 인터페이스 는 **브라우저가 불러온 웹 페이지를 나타내며, 페이지 콘텐츠(DOM트리)의 진입점 역할을 수행 합니다.  2.유튜브 키워드 검색 유튜브에 What is document interface?는 아래와 같이 정의되어 있다. (내 맘대로 번역)\n Document is object or interface that represents webpage loaded.\n-document 객체 or 인터페이스는 웹페이지가 로드되었을때 나타난다.\nIf you want to access any element in an HTML page, you always start with accessing the document object.\n-만약 HTML 페이지의 엘리먼트(요소)에 접근하려면, 항상 document object에 접근하는걸로 시작한다.\nSo, it is an interface.\n-그래서 인터페이스이다.\nand represents any web page loaded in the browser\n-브라우저안의 로드된 모든 웹페이지에 (document 인터페이스가)나타난다.\nand serves as an entry point into the web page\u0026rsquo;s content. (which is the DOM tree)\n-그리고 웹페이지 컨텐츠 (정확히는 DOM 트리 위치에)의 진입점(진입할 수 있게 도와주는) 역할을 수행한다.\nBasically, it is the root of the document tree,\n-일반적으로 (DOM트리는) document 루트 경로를 말하며,\nand provides the primary access to the document\u0026rsquo;s data\n-기본적인 document data에 접근할 수 있게 지원(제공)한다.\n 내가 정의해 본 \u0026ldquo;What is Document ?\u0026rdquo; 자료 결과물을 차분히 읽어본 후 내가 이해한 내용으로 자바스크립트에서 document가 무엇인지 정의해 보았다.\n1.브라우저에서 [불러온/로드된] 모든 웹페이지들은 document 인터페이스를 [생성한다 | 가지고 있다]\n2.이 document 인터페이스는 모든 웹 컨텐츠의 진입점(entry point)=DOM Tree에 [접근할 수 있게] 도와준다.\n3.document tree에 진입하게 되면 document제공하는 다양한 document data(Properties \u0026amp; Methods 등)를 사용할 수 있다.\n document data란? document의 다양한 method와 properties들을 말한다.  1\u0026lt;div id=\u0026#34;container\u0026#34;\u0026gt; 2\t\u0026lt;h1\u0026gt;H1 container text\u0026lt;/h1\u0026gt; 3\u0026lt;/div\u0026gt; 1const cont = document.getElementById(\u0026#34;container\u0026#34;); 2console.log(cont); 바로 아래와 같은 이유 때문에 우리가 위의 코드를 사용할 수 있는 것이다.\n 브라우저안 로드된 웹페이지이기 때문에 document 객체(인터페이스)가 존재한다. 그래서 자바스크립트에서 document 라고 치면 document의 메서드 getElementById() 를 사용해 HTML 엘리먼트 요소에 접근할 수 있는 것이다.  마무리 하며.. 문득 console.log 로 document를 찍으면 무엇이 나오는지 궁금해졌다.\n1console.log(document); 위에서 설명한대로 HTML 최상위 root 경로의 인터페이스를 보여준다.\n이번 포스트를 통해 어떻게 document가 HTML 요소에 접근하고 왜 접근할 수 있었는지에 대해 조금은 이해하고 넘어갈 수 있게 되었다.\n다음에는 document와 연관된 Object Model (객체화)에 대해 이해해 보려고 한다.\n","date":"2022년 2월 9일","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg loading=\"lazy\" decoding=\"async\" src=\"/images/thumb/2022/thumb_js_understanding_document_hu1e27482e641abf3054bec55e9f7998a9_680379_650x0_resize_q100_h2_box.webp\" alt=\"\" class=\"img-fluid w-100 rounded\" width=\"650\" height=\"\" onerror=\"this.onerror='null';this.src='\\/images\\/thumb\\/2022\\/thumb_js_understanding_document_hu1e27482e641abf3054bec55e9f7998a9_680379_650x0_resize_q100_box.jpg'\"\u003e\n \n \n \n\n\n","permalink":"/study/js_understanding_document/","tags":["javascript","document"],"title":"JS Document 이해하기"},{"categories":["css"],"contents":"시작하기에 앞서 HTML 홈페이지의 컨텐츠를 만들다 보면 \u0026lt;p\u0026gt; 태그에 블락 영역 단위로 아래와 같이 \u0026lsquo;한글or영어\u0026rsquo; 텍스트 내용을 입력하게 된다.\n1\u0026lt;p class=\u0026#34;mt-8 text-lg\u0026#34;\u0026gt; 2\tLorem ipsum dolor sit amet, consectetur adipiscing elit. 3 Aenean necmollisnulla.Phase lluslacinia tempusmauriseulaoreet. 4 Proin gravida velit dictum dui consequat malesuada. 5\u0026lt;/p\u0026gt; 6\u0026lt;p class=\u0026#34;mt-8 text-lg\u0026#34;\u0026gt; 7 하이엔드 스피커의 대명사인 FOCAL(포컬)은 1972년 설립되어 지금까지 홈오디오는 물론, 8\t카오디오와 프로페셔널 오디오까지 다양한 라인업으로 유럽에서는 60%의 절대적인 시장 9\t점유율을 기록하고 있습니다. 10\u0026lt;/p\u0026gt;  특별한 CSS 속성값을 부여해주지 않으면 아래의 이미지같이 렌더링되어 텍스트가 출력된다.  상황에 따라 다르겠지만 보통 가독성을 높이기 위해서는 단어별로 줄 바꿈을 해주는게 더 좋아보인다.\n위와 같은 경우 word-break CSS속성을 이용해 단어 기준으로 줄 바꿈을 할지 OR 글자 기준으로 줄 바꿈을 할지 설정이 가능하다. 그 방법에 대해서 알아보자.\n ※ 제대로 짚고 넘어가기  보통 HTML에서 사용되는 다양한 언어를 2가지 타입으로 나뉜다.  중국어/일본어/한글 : CJK 그 외 언어 숫자/영어등 : non-CJK   보통 글자들을 나누는 중단점 . 이 존재하는데 이 2가지 언어 타입은 중단점. 의 기준이 다르다.  CJK 중단점 기준 : 음절 non-CJK 중단점 기준 : 공백(띄어쓰기, 하이픈-) ▼아래의 예제를 보며 이해해보자.     ◎ [Example] 언어 타입에 따른 중단점`.` 위치 살펴보기 1[한글,영어 단어 예제] 2저는 한글입니다 3and english language 1[기본 중단점 한글→음절 / 영어→공백] 2저·는·한·글·입·니·다 3and·english·language  한글은 한 글자 한 글자 음절을 기준으로 중단점.이 나뉘어져 있고 영어는 공백을 기준으로 중단점.이 나뉘어져 있다는 걸 확실히 짚고 넘어가자.  word-break 속성 알아보기 word-break 무엇에 쓰는 물건인고? └ 줄바꿈을 할 때 단어 기준으로 할 지 or 글자 기준으로 할지 정하는 CSS 속성입니다.\n  더 정확히 정의하자면 텍스트가 자신의 컨텐츠 영역(컨테이너 박스)밖으로 oveflow할때(벗어날때) 줄을 어떻게 바꿀 지 지정해주는 CSS 속성입니다.\n \u0026lsquo;줄을 어떻게 바꿀 지\u0026rsquo; 이 부분은 ※ 제대로 짚고 넘어가기 기준으로 다시 해석하자면 → CJK or non CJK 텍스트의 중단점. 을 어떤 기준을 정해줄지 라고 해석할 수 있을거 같다.\n   word-break 속성값 알아보기 1word-break : normal | break-all | keep-all | initial | inherit;  initial:기본값으로 설정 inherit: 부모 요소의 속성값을 상속으로 설정 위의 2가지의 속성값에 대해서는 다른 설명을 추가하지 않겠습니다.   ▶word-break:normal : CJK \u0026amp; non CJK 둘 다 기본 중단점. 기준으로 줄바꿈을 설정한다.\n1[한글,영어 단어 예제 → word-break:normal 적용] 2저·는·한·글·입·니·다 3and·english·language \n실제 예제 출력 결과물을 살펴보자.\n 똑같이 적용된 word-break: normal; 이지만 ※제대로 짚고 넘어가기에서 처럼 영어와 한글의 중단점. 의 기준이 다르게 때문에 결과값이 다르다는 걸 꼭 인식해야 합니다.\n ▶ word-break:break-all : CJK \u0026amp; non CJK 둘 다 중단점의 기준점을 \u0026lsquo;음절\u0026rsquo;로 둔다.\n1[한글,영어 단어 예제 → word-break:break-all 적용] 2저·는·한·글·입·니·다 3a·n·d·e·n·g·l·i·s·h·l·a·n·g·u·a·g·e \n실제 예제 출력 결과물을 살펴보자.  word-break:break-all 적용된 후의 출력된 값입니다. 한글 같은 경우 원래의 중단점. 기준이 음절이였기 word-break: normal과 다른게 없지만 영어 같은 경우 원래의 중단점. 기준 공백 이였기 때문에 기존의 word-break: normal 과 전혀 다른 결과물을 보여줍니다.\n ▶ word-break:keep-all : CJK \u0026amp; non CJK 둘 다 중단점의 기준점을 \u0026lsquo;공백\u0026rsquo;로 둔다.\n 여기서 공백에 하이픈- 도 포함이 된다.  1[한글,영어 단어 예제 → word-break : keep-all 적용] 2저는·한글·입니다 3and·english·language \n실제 예제 출력 결과물을 살펴보자.\n결론 제목처럼 \u0026ldquo;HTML 텍스트 줄바꿈을 단어 기준으로 정하게 만들어 주는 CSS 속성\u0026quot;을 적용시켜주려면 아래와 같이 해당 HTML 요소에 word-break:keep-all CSS 속성값을 적용시켜주면 된다.\n1\u0026lt;p class=\u0026#34;mt-8 text-lg keep-all\u0026#34;\u0026gt; 2\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean necmollisnulla. 3\tPhase lluslacinia tempusmauriseulaoreet.Proin gravida velit dictum dui consequat malesuada. 4\u0026lt;/p\u0026gt; 5\u0026lt;p class=\u0026#34;mt-8 text-lg keep-all\u0026#34;\u0026gt; 6\t하이엔드 스피커의 대명사인 FOCAL(포컬)은 1972년 설립되어 지금까지 홈오디오는 물론, 7\t카오디오와 프로페셔널 오디오까지 다양한 라인업으로 유럽에서는 60%의 절대적인 시장 8\t점유율을 기록하고 있습니다. 9\u0026lt;/p\u0026gt; 1.keep-all { 2 word-break: keep-all; 3} 마무리하며.. 처음에는 관련된 자료를 찾아보고 word-break 속성값의 기준은 \u0026lsquo;글자 기준\u0026rsquo; or \u0026lsquo;단어 기준\u0026rsquo; 인 줄 알았는게 그게 아니였다. 언어별로 나뉘는 중단점. 의 기준으로 나뉘는 것이였다는 것을 이번에 처음으로 알게 되었다.\n홈페이지 컨텐츠를 만들어가며 시간에 쫓긴다는 핑계로 단어별 줄바꿈도 제대로 적용을 해주지 않았다는 것에 반성을 해보기도 했다. (ㅠㅠ 어려운 것도 아닌데..)\n작은 디테일이 쌓이고 쌓여 멋진 결과물이 나오게 된다. 시간이 조금 더 걸리더라도 조금 더 귀찮아 지더라도 작은 디테일을 놓치지 않도록 노력하자!!\n 간단한 컨텐츠들을 대부분 tailwindcss를 이용해 CSS 스타일을 적용하는데, 왜 tailwindcss에는 word-break: keep-all 을 적용시키는 속성값이 없는 것이냐!! 한글 무시하는건가~ ( tailwindcss 에서 비슷하게 사용할 수 있는 속성이 break-words → overflow-wrap: break-word; 인데 영어에는 적용되지만 한글에는 적용되지 않는다. )\n ","date":"2022년 2월 3일","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg loading=\"lazy\" decoding=\"async\" src=\"/images/thumb/2022/thumb-study_css_wordbreak_hu4f09bf0083b054af0fdf4b2249b7ee40_40985_650x0_resize_q100_h2_box_3.webp\" alt=\"\" class=\"img-fluid w-100 rounded\" width=\"650\" height=\"\" onerror=\"this.onerror='null';this.src='\\/images\\/thumb\\/2022\\/thumb-study_css_wordbreak_hu4f09bf0083b054af0fdf4b2249b7ee40_40985_650x0_resize_box_3.png'\"\u003e\n \n \n \n\n\n","permalink":"/study/css_property_wordbreak/","tags":["word-break","css"],"title":"HTML 텍스트 줄바꿈 CSS 속성 | word-break"},{"categories":["tool"],"contents":"시작하기에 앞서.. github에서 fork해 온 Hugo Theme를 custom 진행하면서 프로젝트내 검색을 자주하게 된다. 지금같은 환경에서 프로젝트내 검색을 하게 되면 Hugo Builder로 만들어 진 \u0026lsquo;public\u0026rsquo; 폴더도 포함되어 너무 많은 검색 결과가 나오게 되고, 결국 내가 원하는 검색 결과를 찾기까지 시간이 많이 소비된다.\n바로 이런 경우를 위해 PHPStorm에서 손쉽게 원하는 폴더를 검색 대상에 제외시킬 수 있게 \u0026lsquo;설정\u0026rsquo;창에서 손쉽게 변경 할 수 있다. (JetBrains 관련 된 모든 툴도 해보진 않았지만 적용이 가능하지 않을까 싶다.)\n※ 참고사항\n 윈도우 OS 환경 한글 Plug in 세팅 된 PHPStorm 사용 검색 관련 된 PHPStorm 단축키  Ctrl + Shift + F : 프로젝트내 전체 검색    1.설정창에서 특정 폴더 검색 제외 시키기 ★ 적용 방법\n PHPStorm 설정(Setting)창 열기 (단축키: Ctrl + Alt + S) 디렉토리(영어버전도 directory지 않을까요?) 메뉴를 클릭 디렉토리창에서 제외를 원하는 폴더에 우측을 클릭 후 제외됨(Alt+E) 클릭  2.제외시키기 적용 후 확인해보기 [적용 전 - 프로젝트 내 검색]\n 아래와 같이 public폴더에 있는 모든 내용이 나온다.  [적용 후 - 프로젝트 내 검색]\n 아래와 같이 더 이상 public 폴더가 검색 대상에서 제외된다.  ","date":"2022년 1월 25일","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg loading=\"lazy\" decoding=\"async\" src=\"/images/thumb/2022/thumb-tool_phpstorm_exclusion_folder_hu6fec502c64bf8906541a07ff0e506b73_73225_650x0_resize_q100_h2_box_3.webp\" alt=\"\" class=\"img-fluid w-100 rounded\" width=\"650\" height=\"\" onerror=\"this.onerror='null';this.src='\\/images\\/thumb\\/2022\\/thumb-tool_phpstorm_exclusion_folder_hu6fec502c64bf8906541a07ff0e506b73_73225_650x0_resize_box_3.png'\"\u003e\n \n \n \n\n\n","permalink":"/tool/phpstorm_exclusion_folder/","tags":["phpstorm","setting"],"title":"PHPStorm \u0026 Webstorm에서 특정 폴더 검색 제외하기"},{"categories":["tool"],"contents":"시작하기에 앞서.. 2022년부터는 제대로 된 나만의 블로그를 만들어서 FrontEnd와 관련 된 개발 이야기/나의 생각들과 좋아하는 것들을 다이어리 처럼 기록해 보고 싶었다. 그래서 블로그 생성을 위해 구글링을 하게 되었고 그 결과 Hugo + Netlify + Foresty을 활용해 기본 블로그를 세팅한 후 포스트를 올리기 위한 마크다운 편집기가 필요했다.\n한참 전에 typora를 잠깐 써보았는데 좋은 기억이 있어서 오랜만에 다시 쓸려고 하니 유료화가 되어 있었다. 헉!!하고 5초 정도 놀라긴 했지만 좋은 프로그램을 돈주고 쓰는걸 아까워 하는 스타일이 아니라 유료 라이센스를 구매하고 (3대의 기기에서 사용도 가능!!) 이왕 돈 주고 쓰는거 제대로 써보자 하는 마음이 들었다.\n마크다운 쓰는 형식은 워낙 익숙해져서 문제는 없었지만 다양한 이미지 자료 (특히 에버노트의 스샷 기능을 많이 활용중)를 일일히 github에 올리고 또 마크다운 이미지 형식으로 적어주는게 너무 번거롭게 느껴져 어떻게 해야하나 하고 있었는데, typora에는 마크다운 형식에 손쉽게 이미지를 업로드 할 수 있게 해주는 설정이 추가되었던 것이다. (무야호!!)\n일단 회사컴은 윈도우 버전이기에 IT회사원 신동갓 | Typora 이미지 삽입 자동 업로드(window) 자료를 보고 따라하니 초보자인 나도 손쉽게 자동 이미지 업로드 세팅을 완료했었다.\n문제는 집에서 맥북으로 세팅하려하니 윈도우 os와 똑같이 할 수 가 없었다. (ㅠㅠ왜 맥에서는 PicGo-Core \u0026gt; open config file이 없는 것이냐..)\n맥에서는 윈도우에서처럼 picGoCore 업로드 세팅이 안되기 때문에 새로운 방법을 찾아야 했다. 구글링 결과 무료 오픈 소스인 uPic으로 자동 이미지 업로드 세팅을 도전해 보기로 했다.\n※ 참조 자료\n typora 공식 문서 blog.svend.cc/upic/en/ 자료  1.typora 설정 세팅  설정 \u0026gt; 이미지 창의 첫번째 선택란은 upload image로 선택한다. 밑의 3개의 체크란에 체크를 해준다. Image Uploader 선택란에서 uPic을 선택해준다.  2.터미널에서 upic 세팅 -터미널 창에서 아래의 메세지를 입력해주자.\n1$brew install bigwig-club/brew/upic --cask -gihub 에서 release 다운(uPicd.zip) 받은 후 프로그램 intall\n3.맥북 시스템 환경 설정 세팅 -맥북 \u0026lsquo;시스템 환경 설정 \u0026gt; 확장 프로그램 \u0026gt; Finder 확장 프로그램\u0026rsquo; 창에서 uPic 선택\n-스샷을 위한 시스템 환경 정 \u0026gt; 보안 및 개인정보 보호 \u0026gt; 개인 정보 보호 \u0026gt; 화면 기록 \u0026gt; uPic 허용\n5.github에 이미지 호스팅 연결 시키기  자신의 github 계정에 사용하는 이미지 자료들을 업로드할 repository가 있는 상태여야 합니다. (github에서 repository를 생성하는 설명은 따로 추가하지 않겠습니다.)\n github access token 발급 1.설정창 클릭\n2.Developer settings 클릭\n3.Personal access tokens 클릭 \u0026gt; Generate new token 클릭\n4.new token 세팅\n 어디에 access가 되는지 간단히 note란에 메모 작성 토큰 만료 기간 설정 (자주 토큰을 바꿔주는게 보안적으로 더 안전하겠죠? 전 귀찮아서 no expiration) 아래 이미지처럼 체크란 체크하고 Update token 클릭 token 생성 완료 → token 코드 복사   한 번 생성된 토큰 내용은 생성 시에만 확인이 가능하니 보안이 잘 되는 것에 기록해두는 것도 좋을거 같습니다. 전 다른 컴에도 세팅하다가 토큰을 잊어버려 토큰을 재발급 후 다시 세팅을 해주었답니다.\n uPic 환경 설정 세팅  맥 메뉴 막대 있는 곳에 uPic 프로그램을 선택 후 설정 창에 들어갈 수 있습니다.\n -uPic 환경 설정 \u0026gt; Host 창 \u0026gt; github 추가\n★ 우측 설정창 내용 추가하기\n 현재 제가 github에서 사용하는 이미지 저장소 repository 스샷을 참고해서 uPic 설정창에는 본인의 Repository 내용을 적용해주자.  저는 blog.image.server Repository에 루트에서 2022 이름의 폴더를 생성하고 그 안에 이미지 저장 세팅을 할려고 했습니다.     uPic 설정창 관련 내용 입력    Owner : JJuiceCode\n  Repo : blog.image.server\n  Token : github에서 생성한 access token\n  Domain : 비어있게 놔둔다.\n  Use jsDeliver CDN ... : 여기에 체크하게 되면 typora에서 인증 실패가 뜬다. 체크하지 않는다.\n  save key : 2022/{year}_{month}_{day}_{random}{.suffix}\n  repository 루트 경로가 아닌 저와 같이 2022라는 하위 폴더에 저장을 하고 싶다면 위에 내용처럼 폴더명을 표시해줘야 합니다.\n  원래는 {hour}{minute}{second}도 추가해주었지만 우리가 실제 사용하는 시간내용이 아닌 타임스탬프 내용처럼 나와 삭제했습니다.\n  저는 대부분의 이미지가 선택영역 스샷으로 이미지를 가져오는 편이라 {filename}을 추가하면 이미지 네이밍이 너무 길어져서 날짜 시간 정보와 random 자동 파일명을 지정해 주었습니다.\n    내용 입력 완료 후 validate 버튼 누른 후 save 하기  6.설정 완료 후 확인해보기 typora에서 확인 typora 설정 \u0026gt; 이미지 \u0026gt; Image upload setting 창에서 \u0026lsquo;Test Uploader\u0026rsquo; 버튼을 누르면 아래와 같이 \u0026lsquo;인증 성공\u0026rsquo; 표시가 나와야 한다.\n7.typora에 이미지 붙여넣기  uPic프로그램으로(메뉴막대에 활성화되어있다면) \u0026lsquo;upload from screenshot\u0026rsquo; 클릭 후 선택영역을 스샷 하면 자동으로 github 저장소에 이미지가 업로드가 된 후 그 상태로 바로 typora에 ctrl + v 를 누르면 업로드 된 이미지가 붙여넣기가 됩니다.( 이미지가 복사할때 한 번, 붙여넣기 할때 두 번 이렇게 중첩되서 총 2개의 이미지가 업로드 되지 않는다. 스샷하는 순간 업로드 되고 복사할때는 업로드 되어 스샤 한번에 딱 하나의 이미지만 업로드 된다.) 저 같은 경우 스샷은 대부분 에버노트를 활용하기 때문에 에버노트 스샷 후 ctrl + v 붙여넣기로도 아래와 같이 typora에서 github 저장소에 이미지를 업로드 한다. (참고로 에버노트 스샷을 활용한다고 하면 활성화 되어있는 uPic 프로그램을 OFF 해도 에버노트 스샷 \u0026gt; typora 붙여넣기 \u0026gt; 자동 업로드 기능은 문제없이 사용가능)  로컬 typora가 아닌 웹상에 올린 이미지 확인해보기 마무리 하며.. 프로그래밍적으로 많은 지식을 알고 있다면 pyhton또는 go를 활용해 조금 더 쉽게 자동 업로드가 가능하겠지만 많이 부족한 나에게 이정도 세팅만으로 이정도 편하게 이미지를 스샷하고 컨텐츠를 만들 수 있다는 것에 너무 기쁘고 감사하다.\n과거에 요것 저것 기웃거리며 블로그를 어설프게 만들거 어설픈 컨텐츠를 만들어 올리고 관두기를 반복했었다. 하지만 2022년 올해부터 만큼은 꾸준하게 즐거운 마음으로 틈틈히 내가 알게 된 것을 느끼는 것들 좋아하는 것들에 관해 써볼려고 한다.\n더 이상 컨텐츠의 소비자가 아닌 생산자가 되기 위해 JJuice 최선을 다해보자꾸나!!\n","date":"2022년 1월 24일","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg loading=\"lazy\" decoding=\"async\" src=\"/images/thumb/2022/blogthumb_typora_main_hu359627d5f000cea4eb04c22ada0a9106_9798_650x0_resize_q100_h2_box_3.webp\" alt=\"\" class=\"img-fluid w-100 rounded\" width=\"650\" height=\"\" onerror=\"this.onerror='null';this.src='\\/images\\/thumb\\/2022\\/blogthumb_typora_main_hu359627d5f000cea4eb04c22ada0a9106_9798_650x0_resize_box_3.png'\"\u003e\n \n \n \n\n\n","permalink":"/tool/typora_macos_autoimageupload/","tags":["github","uPic","typora"],"title":"Typora 이미지 자동 업로드 (mac 환경)"}]
