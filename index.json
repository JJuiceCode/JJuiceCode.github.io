





























































[{"categories":["study"],"contents":"시작하기에 앞서 기존에 항상 tailwindcss 를 사용하려고 \u0026lt;head\u0026gt; 에 아래의 CDN \u0026lt;link\u0026gt; 코드를 추가해서 사용하고 있다. 회사에서도 고도몰 쇼핑몰 플랫폼을 사용하고 있어서 npm 세팅도 하기 애매하고 (뭔가 딱딱하게 만들어진 플랫폼은 수정이 가능한 부분만 건드는게 좋다.) 코드 한 줄만 넣으면 된다는 편의성도 무시하지는 못하겠다.\n사람이 습관의 동물이라고 매 번 쓰던것만 반복해서 쓰게 되고 내가 과연 tailwindcss 에 대해서 얼마나 제대로 알고 있는지 궁금했다. 이왕 쓰는 거 100% 끌어올려 사용해보고 싶다는 욕심이 생겼다.\n그래서 다시 처음부터 tailwindcss 시작해보려고 한다. 급하게 페이지를 완성하려고 대충대충 갔다쓰는게 아니라 내가 기존에 쓰지 않던 기능은 무엇이 있는지.. tailwindcss를 활용한 다양한 디자인 패키지를 만들려면 어떻게 해야하는지..\n지금부터 시작합니다. tailwindcss Deep Dive!!!\n※ 참조자료\n tailwindcss 공식 사이트   작업 환경은 window os 입니다.\n Get started with Tailwind CSS 공식 문서에 나온 제목 그대로이다. (🙂마크다운 H2 헤더문자는 영어로 써야 멋진 느낌이 든다)\n설치 방법은\n Tailwind CLI Using PostCSS Frameworkd Guide Play CDN  이렇게 4가지가 종류가 있는데, 일단 첫 번째 Tailwind CLI 방법으로 기본 세팅을 해보기로 했다.\n① 프로젝터 폴더 생성 앞으로 tailwindcss와 관련 된 내용을 적용해보고 결과물을 만들어 낼 폴더를 생성하자.\nex ) 저 같은 경우 D:\\Dropbox\\01_Study\\FrontEnd\\tailwindcss \u0026gt; deepDive 라는 폴더를 생성하고 프로젝트 폴더로 사용하기로 했다.\n자신이 사용하는 에디터 툴로 해당 폴더를 OPEN하자. (저는 PHPStorm을 사용 중)\n② 해당 프로젝트 폴더 터미널에서 npm \u0026amp; npx 명령어 실행  기본적이 npm사용하기 위한 세팅법은 윈도우10에서 NPM을 사용하기 위한 Node.js 설치하는 방법 참조\n -tailwindcss 설치\n1$npm install -D tailwindcss -tailwind.config.js 파일 생성하기\n1$npx tailwindcss init 위의 2과정이 문제없이 설치가 됐다면 아래와 같이 비어있는 폴더에 node_module package.json tailwind.config.js 파일이 생성됩니다.\n③ tailwind.config.js 파일에 tailwindcss적용할 파일 경로 추가하기 기본적으로 아래와 같이 모든 키 값이 비어져 있습니다.\ncontent 속성안에 아래의 코드를 추가하자.\n content란에 넣어주는 값은 내가 tailwindcss를 적용할 타켓(폴더or파일)이 누구인지 알려주는 겁니다. 예를들어 아래 \u0026quot;./src/**/*.{html,js}\u0026quot; 같은 경우 루트 프로젝트 폴더 \u0026gt; src폴더안에 있는 모든 html,js파일에 tailwindcss를 적용시켜주겠다 라고 설정해 주는 겁니다.  1module.exports = { 2\tcontent: [ \u0026#34;./src/**/*.{html,js}\u0026#34; ], 3\ttheme: { 4\textend: { }, 5\t}, 6\tplugins: [], 7} ④ src 폴더 안 css파일 생성 후 @tailwind 지시자 추가하기 -src 폴더에 tailwind_input.css 파일 생성\n-tailwind_input.css 파일에 @tailwind 지시자 코드 추가\n1@tailwind base; 2@tailwind components; 3@tailwind utilities; ⑤ 터미널에서 Tailwind CLI 빌드해 주는 명령어 입력하기 여기서 빌드해주는 파일은 바로 위에서 @tailwind 지시자 코드가 있는 tailwind_input.css 파일을 말한다.\n자신이 만든 프로젝트 폴더에 (ex:deepDive) 터미널에 다시 들어가 아래의 명령어를 입력해주자.\n1$npx tailwindcss -i ./src/tailwind_input.css -o ./dist/output.css --watch 문제가 생기지 않았다면 아래와 같이 dist/tailwind_output.css 폴더와 파일이 생성된다.\n그리고 --watch 옵션을 추가 되었기 때문에 터미널에서는 css가 추가되거나 변경되면 바로 tailwindcss의 Just-in-time 형식으로 tailwind_output.css 에 css 코드가 라이브로 추가될 것이다.\n 여기서 말하는 Just-in-time 형식이란 내가 HTML 태그에 필요한 tailwindcss class인 mt-4 를 적었다면 tailwind_output.css 에는 오직 .mt-4 css 코드 하나만 추가되는 것이다.   예전에 tailwindcss의 몇 버전이였는지 모르겠지만, 초기때는 아예 Just-in-time형식이 없어서 엄청나게 무거운 통 css파일 (모든 클래스가 담겨져 있는)을 사용했었다. 그 후로는 특정 플러그인을 사용해 Just-in-time 형식으로 경량화 된 css파일을 사용할 수 있었고, 지금 현재는 Always Just-in-time형식으로 사용해 내가 사용한 css코드만 파일에 추가되고 있다.\n 여기까지가 tailwind 설치 방법 중 1.Tailwind CLI 가 전부이다. (참 간단하다.)\n⑥ tailwindcss를 적용할 HTML 문서에 빌드된 css파일 link해주기 -deepDive 루트 폴더에 새로운 HTML 문서를 생성하자. (ex: index.html)\n-\u0026lt;head\u0026gt; 태그 안에 tailwind_output.css 파일을 link시켜주자.\n \u0026lt;link href=\u0026quot;/dist/tailwind_output.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot;\u0026gt; 코드 추가  -\u0026lt;body\u0026gt; 에 \u0026lt;h1\u0026gt;태그 생성 후 tailwind 관련 된 class 를 추가해보자.\n1\u0026lt;head\u0026gt; 2\t\u0026lt;link href=\u0026#34;dist/tailwind_output.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; 3\u0026lt;/head\u0026gt; 4\u0026lt;body\u0026gt; 5\u0026lt;h1 class=\u0026#34;text-5xl font-bold text-pink-600\u0026#34;\u0026gt; 6\tTailwindcss Deep Dive! 7\u0026lt;/h1\u0026gt; 8\u0026lt;/body\u0026gt; 위와 같이 tailwindcss 값을 적어주면 tailwind_output.css 파일에 자동으로 Just-in-time형식으로 해당 css코드만 추가된다.\n1.text-5xl { 2 font-size: 3rem; 3 line-height: 1; 4} 5 6.font-bold { 7 font-weight: 700; 8} 9 10.text-pink-600 { 11 --tw-text-opacity: 1; 12 color: rgb(219 39 119 / var(--tw-text-opacity)); 13} 😱Error Issue.1 1$npx tailwindcss -i ./src/tailwind_input.css -o ./dist/output.css --watch 혹시 이 명령어를 치고 난 후 아래와 같은 경고 메세지 뜨는 경우(tailwind css도 적용이 안됨)\n warn - No utility classes were detected in your source files. If this is unexpected, double-check the content option in your Tailwind CSS configuration.  ▶문제 원인 찾기 : 바로 tailwind.config.js 파일에서 content 경로 설정에 문제가 있다는 것이다.\n-나의 실수를 확인해보자.\n deepDive \u0026gt; src 폴더에 index.html을 생성한 게 아니라 deepDive 루트 경로에 index.html 을 생성했다.   분명 tailwind.config.js \u0026gt; content 값에는 ./src/**/*.{html,js}, 즉 src폴더 안에 있는 모든 html,js파일들로만 설정을 해주었었다. 설정값에는 src 폴더 내부 파일에만 tailwindcss가 적용되게 설정되어 있는데, 루트경로에 tailwindcss를 사용하려고 하니 경고 메세지가 뜬 것이였다.  만약 루트 경로 가 아닌 deepDive \u0026gt; src 폴더에 index.html을 생성한 상황이라면 관련 경고 메세지가 뜨지 않는다.    😃Solution  tailwind.config.js파일에 루트 경로 설정값을 추가시켜 준다. 아래 코드 내용을 참고해 자신의 프로젝트에 맞게 설정해주면 된다.  1//Erro.1 → Solution Code 2module.exports = { 3\tcontent: [ 4\t\u0026#39;index.html\u0026#39;, //루트 경로의 index.html 단일 파일에만 적용 5\t\u0026#39;*.{html,js}\u0026#39;, //루트 경로의 모든 html,js파일 6\t\u0026#39;./src/**/*.{html,js}\u0026#39;, //src 경로의 모든 html,js파일 7\t], 마무리하며.. 이왕 이렇게 시작한거 앞으로 tailwindcss와 관련된 다양한 포스트를 만들어봐야겠다. [포스트 예정]\n 내가 자주 사용하는 tailwindcss 기능들과 실제 예제 내가 잘 몰랐던 (자주 사용하지 않았던) tailwindcss 기능들과 실제 예제 tailwind 공식 youtube에서 알려주는 내용 정리와 실제 예제 최신 3.0으로 업데이트 되면서 추가된 새로운 기능들  ","date":"2022년 2월 16일","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg loading=\"lazy\" decoding=\"async\" src=\"/images/thumb/2022/thumb_tailwindcss_deepDive1_hu9c7f71193e031d78fea213062a4c1ff2_124263_650x0_resize_q100_h2_box.webp\" alt=\"\" class=\"img-fluid w-100 rounded\" width=\"650\" height=\"\" onerror=\"this.onerror='null';this.src='\\/images\\/thumb\\/2022\\/thumb_tailwindcss_deepDive1_hu9c7f71193e031d78fea213062a4c1ff2_124263_650x0_resize_q100_box.jpg'\"\u003e\n \n \n \n\n\n","permalink":"/study/tailwindcss_deepdive_install/","tags":["tailwindcss","css"],"title":"Tailwindcss Deep Dive.1 | 기본세팅"},{"categories":["study"],"contents":"시작하기에 앞서.. 웹과 관련된 JS코드들 중 가장 많이 사용하는 것이 무엇일까 생각해보았다.\n개인적으로 생각하기에는 HTML 문서를 JS로 제어하기 위해 documment 객체의 다양한 메소드를 이용해 요소(Element)를 가져와서(or DOM 노드에 접근해서) 변수에 할당한 후 다양하게 활용하는 코드들이였다.\n아래 코드들이 그 예시이다.\nex.1)\n1\u0026lt;div id=\u0026#34;container\u0026#34;\u0026gt; 2\t\u0026lt;h1\u0026gt;H1 container text\u0026lt;/h1\u0026gt; 3\u0026lt;/div\u0026gt; 1const cont = document.getElementById(\u0026#34;container\u0026#34;); 2console.log(cont); ex.2)\n1\u0026lt;div class=\u0026#34;item\u0026#34;\u0026gt; 2\t\u0026lt;p\u0026gt;This is a item\u0026lt;/p\u0026gt; 3\u0026lt;/div\u0026gt; 1const item = document.getElementsByClassName(\u0026#34;item\u0026#34;); 2console.log(item); 위의 예제에서 본 것 처럼 document 객체의 getElementById 메서드인지 아니면 getElementsByClassName 메서드인지 return하는 결과값이 다르다.\ndocument객체에는 이처럼 노드 요소에 접근하는 메서드 뿐만 아니라 다양한 메서드들이 존재한다. 문득 document 객체는 뭐하는 놈인지 브라우저에서 어떤 역할을 하는지 제대로 이해하고 넘어가고 싶은 생각이 들었다.\nDocument 단어적 의미 네이버 영어사전에 document 를 쳐보았다.\n docu·ment : \u0026lt;명사\u0026gt; 서류,문서 | (컴퓨터의) 문서 (파일)  Document 검색 자료 피드백 잠시 관련 자료를 검색한 내용을 살펴보자.\n1.구글 검색 : MDN Web Docs 가장 첫 번째로 나온 것 검색 결과물은 예상대로 MDN Web Docs \u0026amp;gt; Document 자료(한글 번역)이다. 아래와 같이 document 에 대해 정의되어 있다.\n Document 인터페이스 는 **브라우저가 불러온 웹 페이지를 나타내며, 페이지 콘텐츠(DOM트리)의 진입점 역할을 수행 합니다.  2.유튜브 키워드 검색 유튜브에 What is document interface?는 아래와 같이 정의되어 있다. (내 맘대로 번역)\n -document 객체 or 인터페이스는 웹페이지가 로드되었을때 나타난다. -만약 HTML 페이지의 엘리먼트(요소)에 접근하려면, 항상 document object에 접근하는걸로 시작한다. -그래서 인터페이스이다. -브라우저안의 로드된 모든 웹페이지에 (document 인터페이스가)나타난다. -그리고 웹페이지 컨텐츠 (정확히는 DOM 트리 위치에)의 진입점(진입할 수 있게 도와주는) 역할을 수행한다. -일반적으로 (DOM트리는) document 루트 경로를 말하며, -기본적인 document data에 접근할 수 있게 지원(제공)한다.  내가 정의해 본 \u0026ldquo;What is Document ?\u0026rdquo; 자료 결과물을 차분히 읽어본 후 내가 이해한 내용으로 자바스크립트에서 document가 무엇인지 정의해 보았다.\n1.브라우저에서 [불러온/로드된] 모든 웹페이지들은 document 인터페이스를 [생성한다 | 가지고 있다]\n2.이 document 인터페이스는 모든 웹 컨텐츠의 진입점(entry point)=DOM Tree에 [접근할 수 있게] 도와준다.\n3.document tree에 진입하게 되면 document제공하는 다양한 document data(Properties \u0026amp; Methods등)를 사용할 수 있다.\nDocument Properties 활용 예제 1\u0026lt;body\u0026gt; 2\t\u0026lt;div id=\u0026#34;container\u0026#34;\u0026gt; 3\t\u0026lt;h1\u0026gt;H1 container text\u0026lt;/h1\u0026gt; 4\t\u0026lt;/div\u0026gt; 5\u0026lt;/body\u0026gt; 1console.log(document.body);  브라우저안 로드된 웹페이지이기 때문에 document 객체(인터페이스)가 존재한다. 그래서 자바스크립트에서 document 라고 치면 document의 프로퍼티 body를 사용해 HTML내의 body엘리먼트에 접근할 수 있는 것이다.  Document Methods 활용 예제 1\u0026lt;div id=\u0026#34;container\u0026#34;\u0026gt; 2\t\u0026lt;h1\u0026gt;H1 container text\u0026lt;/h1\u0026gt; 3\u0026lt;/div\u0026gt; 1const cont = document.getElementById(\u0026#34;container\u0026#34;); 2console.log(cont);  브라우저안 로드된 웹페이지이기 때문에 document 객체(인터페이스)가 존재한다. 그래서 자바스크립트에서 document 라고 치면 document의 메서드 getElementById() 를 사용해 HTML의 \u0026lt;div id=\u0026quot;container\u0026quot;\u0026gt; 엘리먼트의 객체를 가져와 변수에 할당해 줄 수 있는 것이다.   바로 [내가 정의해 본 \u0026ldquo;What is Document ?\u0026quot;](#내가-정의해-본-\u0026ldquo;What-is-Document ?\u0026quot;)이유 때문에 우리가 위의 코드와 같이 document의 properties \u0026amp; methods 들을 사용할 수 있는 것이다.\n 마무리 하며.. 문득 console.log 로 document를 찍으면 무엇이 나오는지 궁금해졌다.\n1console.log(document); 위에서 설명한대로 HTML 최상위 root 경로의 인터페이스를 보여준다.\n이번 포스트를 통해 어떻게 document가 HTML 요소에 접근하고 왜 접근할 수 있었는지에 대해 조금은 이해하고 넘어갈 수 있게 되었다.\n다음에는 document와 연관된 Object Model (객체화)에 대해 이해해 보려고 한다.\n추가 내용 \u0026lt;2022.2.15 추가\u0026gt;\n※ 자료 출처 : 생활코딩-Object Model\n내가 이해하고 있는 Object Model 자바스크립트에서는 브라우저를 컨트롤 하기 위해 탄생되었다.\n자바스크립트에서 브라우저의 웹 컨텐츠 요소(HTML 태그)를 동적으로 제어하기 위해서는 반드시 필요한게 한 가지고 있다. 그건 바로 객체이다.\n자바스크립트는 객체만을 컨트롤 할 수 있다. 이 부분을 브라우저에서도 잘 알고 있다. 그래서 브라우저에서는 모든 HTML 문서를 읽는 동시에 태그 요소들을 객체로 만들어준다 → 객체화 시켜 놓는다.\n브라우저의 구성요소는 window객체(전역객체) → Dom, Bom (window객체의 프로퍼티)로 되어있다. Dom,Bom 요소들이 바로 자바스크립트에서 쉽게 접근해 제어하기 위해 객체화 시켜 놓은 대표적인 Object Model들이다.\nDOM에는 전역객체인 window의 속성값 중 하나이다. window 다른 종류의 속성값들 location frame 등은 BOM에 속해져있다.\n 브라우저에서는 DOM, BOM, Javascript Core 이렇게 3개의 구조로 되어있다. 하나 짚고 넘어가야 할 점은 브라우저 환경에서만 DOM, BOM이 존재한다. 다른 환경(ex:node.js환경)에서는 JS Core 부분을 제외하고는 존재하지 않는다.(node.js를 다뤄보지는 않았지만 DOM,BOM같이 node.js에서 필요한 다른 구조들이 있지 않을까 싶다.)\n  1\u0026lt;body\u0026gt; 2 \u0026lt;img src=\u0026#34;www.jjuice.com/jjuice.jpg\u0026#34; /\u0026gt; 3\u0026lt;/body\u0026gt; 위와 같은 HTML 문서가 있다.\n브라우저에서 해당 문서를 로드하면서 각 HTML요소들을 객체화(객체로 만들어 놓음)시킨다. 그러면 우리가 할 일은 자바스크립트 코드로 객체화 시켜놓은 해당 \u0026lt;img\u0026gt; 태그 요소를 찾아오기면 하는 것이다.\n그래서 우리는 웹페이지가 로드되면서 자동으로 세팅되어 있는 document 인터페이스에 접근해 (정확히는 DOM Tree 루트) document가 제공하는 메서드를 사용해 아래와 같은 코드로 \u0026lt;img\u0026gt; 태그 요소를 변수에 할당해 줄 수 있고 원한다면 자바스크립트 프로퍼티와 메서드를 사용해 동적으로 \u0026lt;img\u0026gt; 태그 요소를 변경해 줄 수 있다.\n 이미 화면에 만들어진 (렌더링 된) HTML문서는 HTML 코드를 수정해서 변경할 수가 없다. 오직 자바스크립트만이 동적으로 변경이 가능하다.\n 1const imgs = document.getElementsByTagName(\u0026#34;img\u0026#34;); 2imgs.style.width = 300px;  ★ 내가 이해한 Object Model 핵심요약\n JS는 브라우저 요소들을 제어하기 위해 사용된다. JS는 오직 객체만을 컨트롤 할 수 있다. 브라우저는 JS를 위해 미리 HTML요소들을 객체화 시켜 놓는다. 브라우저에서 이런 객체화 세팅을 위한 DOM, BOM, JS Core 구조로 되어있다. (모두 window객체 프로퍼티) JS에서 할 일은 브라우저에서 준비해 놓은 객체들 중에 내가 필요한 객체를 찾는 것이다. Document인터페이스의 DOM Tree 진입점을 통해 루트 경로에 접근한 상태에서 document의 다양한 프로퍼티와 메서드를 통해 동적으로 요소를 제어할 수 있다.  ","date":"2022년 2월 9일","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg loading=\"lazy\" decoding=\"async\" src=\"/images/thumb/2022/thumb_js_understanding_document_hu82cdb04eecf96f5b6a9725823ce192d4_252695_650x0_resize_q100_h2_box.webp\" alt=\"\" class=\"img-fluid w-100 rounded\" width=\"650\" height=\"\" onerror=\"this.onerror='null';this.src='\\/images\\/thumb\\/2022\\/thumb_js_understanding_document_hu82cdb04eecf96f5b6a9725823ce192d4_252695_650x0_resize_q100_box.jpg'\"\u003e\n \n \n \n\n\n","permalink":"/study/js_understanding_document/","tags":["javascript","document","dom"],"title":"JS Document 이해하기"},{"categories":["tool"],"contents":"시작하기에 앞서 HTML 홈페이지의 컨텐츠를 만들다 보면 \u0026lt;p\u0026gt; 태그에 블락 영역 단위로 아래와 같이 \u0026lsquo;한글or영어\u0026rsquo; 텍스트 내용을 입력하게 된다.\n1\u0026lt;p class=\u0026#34;mt-8 text-lg\u0026#34;\u0026gt; 2\tLorem ipsum dolor sit amet, consectetur adipiscing elit. 3 Aenean necmollisnulla.Phase lluslacinia tempusmauriseulaoreet. 4 Proin gravida velit dictum dui consequat malesuada. 5\u0026lt;/p\u0026gt; 6\u0026lt;p class=\u0026#34;mt-8 text-lg\u0026#34;\u0026gt; 7 하이엔드 스피커의 대명사인 FOCAL(포컬)은 1972년 설립되어 지금까지 홈오디오는 물론, 8\t카오디오와 프로페셔널 오디오까지 다양한 라인업으로 유럽에서는 60%의 절대적인 시장 9\t점유율을 기록하고 있습니다. 10\u0026lt;/p\u0026gt;  특별한 CSS 속성값을 부여해주지 않으면 아래의 이미지같이 렌더링되어 텍스트가 출력된다.  상황에 따라 다르겠지만 보통 가독성을 높이기 위해서는 단어별로 줄 바꿈을 해주는게 더 좋아보인다.\n위와 같은 경우 word-break CSS속성을 이용해 단어 기준으로 줄 바꿈을 할지 OR 글자 기준으로 줄 바꿈을 할지 설정이 가능하다. 그 방법에 대해서 알아보자.\n ※ 제대로 짚고 넘어가기  보통 HTML에서 사용되는 다양한 언어를 2가지 타입으로 나뉜다.  중국어/일본어/한글 : CJK 그 외 언어 숫자/영어등 : non-CJK   보통 글자들을 나누는 중단점 . 이 존재하는데 이 2가지 언어 타입은 중단점. 의 기준이 다르다.  CJK 중단점 기준 : 음절 non-CJK 중단점 기준 : 공백(띄어쓰기, 하이픈-) ▼아래의 예제를 보며 이해해보자.     ◎ [Example] 언어 타입에 따른 중단점`.` 위치 살펴보기 1[한글,영어 단어 예제] 2저는 한글입니다 3and english language 1[기본 중단점 한글→음절 / 영어→공백] 2저·는·한·글·입·니·다 3and·english·language  한글은 한 글자 한 글자 음절을 기준으로 중단점.이 나뉘어져 있고 영어는 공백을 기준으로 중단점.이 나뉘어져 있다는 걸 확실히 짚고 넘어가자.  word-break 속성 알아보기 word-break 무엇에 쓰는 물건인고? └ 줄바꿈을 할 때 단어 기준으로 할 지 or 글자 기준으로 할지 정하는 CSS 속성입니다.\n  더 정확히 정의하자면 텍스트가 자신의 컨텐츠 영역(컨테이너 박스)밖으로 oveflow할때(벗어날때) 줄을 어떻게 바꿀 지 지정해주는 CSS 속성입니다.\n \u0026lsquo;줄을 어떻게 바꿀 지\u0026rsquo; 이 부분은 ※ 제대로 짚고 넘어가기 기준으로 다시 해석하자면 → CJK or non CJK 텍스트의 중단점. 을 어떤 기준을 정해줄지 라고 해석할 수 있을거 같다.\n   word-break 속성값 알아보기 1word-break : normal | break-all | keep-all | initial | inherit;  initial:기본값으로 설정 inherit: 부모 요소의 속성값을 상속으로 설정 위의 2가지의 속성값에 대해서는 다른 설명을 추가하지 않겠습니다.   ▶word-break:normal : CJK \u0026amp; non CJK 둘 다 기본 중단점. 기준으로 줄바꿈을 설정한다.\n1[한글,영어 단어 예제 → word-break:normal 적용] 2저·는·한·글·입·니·다 3and·english·language \n실제 예제 출력 결과물을 살펴보자.\n 똑같이 적용된 word-break: normal; 이지만 ※제대로 짚고 넘어가기에서 처럼 영어와 한글의 중단점. 의 기준이 다르게 때문에 결과값이 다르다는 걸 꼭 인식해야 합니다.\n ▶ word-break:break-all : CJK \u0026amp; non CJK 둘 다 중단점의 기준점을 \u0026lsquo;음절\u0026rsquo;로 둔다.\n1[한글,영어 단어 예제 → word-break:break-all 적용] 2저·는·한·글·입·니·다 3a·n·d·e·n·g·l·i·s·h·l·a·n·g·u·a·g·e \n실제 예제 출력 결과물을 살펴보자.  word-break:break-all 적용된 후의 출력된 값입니다. 한글 같은 경우 원래의 중단점. 기준이 음절이였기 word-break: normal과 다른게 없지만 영어 같은 경우 원래의 중단점. 기준 공백 이였기 때문에 기존의 word-break: normal 과 전혀 다른 결과물을 보여줍니다.\n ▶ word-break:keep-all : CJK \u0026amp; non CJK 둘 다 중단점의 기준점을 \u0026lsquo;공백\u0026rsquo;로 둔다.\n 여기서 공백에 하이픈- 도 포함이 된다.  1[한글,영어 단어 예제 → word-break : keep-all 적용] 2저는·한글·입니다 3and·english·language \n실제 예제 출력 결과물을 살펴보자.\n결론 제목처럼 \u0026ldquo;HTML 텍스트 줄바꿈을 단어 기준으로 정하게 만들어 주는 CSS 속성\u0026quot;을 적용시켜주려면 아래와 같이 해당 HTML 요소에 word-break:keep-all CSS 속성값을 적용시켜주면 된다.\n1\u0026lt;p class=\u0026#34;mt-8 text-lg keep-all\u0026#34;\u0026gt; 2\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean necmollisnulla. 3\tPhase lluslacinia tempusmauriseulaoreet.Proin gravida velit dictum dui consequat malesuada. 4\u0026lt;/p\u0026gt; 5\u0026lt;p class=\u0026#34;mt-8 text-lg keep-all\u0026#34;\u0026gt; 6\t하이엔드 스피커의 대명사인 FOCAL(포컬)은 1972년 설립되어 지금까지 홈오디오는 물론, 7\t카오디오와 프로페셔널 오디오까지 다양한 라인업으로 유럽에서는 60%의 절대적인 시장 8\t점유율을 기록하고 있습니다. 9\u0026lt;/p\u0026gt; 1.keep-all { 2 word-break: keep-all; 3} 마무리하며.. 처음에는 관련된 자료를 찾아보고 word-break 속성값의 기준은 \u0026lsquo;글자 기준\u0026rsquo; or \u0026lsquo;단어 기준\u0026rsquo; 인 줄 알았는게 그게 아니였다. 언어별로 나뉘는 중단점. 의 기준으로 나뉘는 것이였다는 것을 이번에 처음으로 알게 되었다.\n홈페이지 컨텐츠를 만들어가며 시간에 쫓긴다는 핑계로 단어별 줄바꿈도 제대로 적용을 해주지 않았다는 것에 반성을 해보기도 했다. (ㅠㅠ 어려운 것도 아닌데..)\n작은 디테일이 쌓이고 쌓여 멋진 결과물이 나오게 된다. 시간이 조금 더 걸리더라도 조금 더 귀찮아 지더라도 작은 디테일을 놓치지 않도록 노력하자!!\n 간단한 컨텐츠들을 대부분 tailwindcss를 이용해 CSS 스타일을 적용하는데, 왜 tailwindcss에는 word-break: keep-all 을 적용시키는 속성값이 없는 것이냐!! 한글 무시하는건가~ ( tailwindcss 에서 비슷하게 사용할 수 있는 속성이 break-words → overflow-wrap: break-word; 인데 영어에는 적용되지만 한글에는 적용되지 않는다. )\n ","date":"2022년 2월 3일","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg loading=\"lazy\" decoding=\"async\" src=\"/images/thumb/2022/thumb-study_css_wordbreak_hu4f09bf0083b054af0fdf4b2249b7ee40_40985_650x0_resize_q100_h2_box_3.webp\" alt=\"\" class=\"img-fluid w-100 rounded\" width=\"650\" height=\"\" onerror=\"this.onerror='null';this.src='\\/images\\/thumb\\/2022\\/thumb-study_css_wordbreak_hu4f09bf0083b054af0fdf4b2249b7ee40_40985_650x0_resize_box_3.png'\"\u003e\n \n \n \n\n\n","permalink":"/study/css_property_wordbreak/","tags":["word-break","css"],"title":"HTML 텍스트 줄바꿈 CSS 속성 | word-break"},{"categories":["tool"],"contents":"시작하기에 앞서.. github에서 fork해 온 Hugo Theme를 custom 진행하면서 프로젝트내 검색을 자주하게 된다. 지금같은 환경에서 프로젝트내 검색을 하게 되면 Hugo Builder로 만들어 진 \u0026lsquo;public\u0026rsquo; 폴더도 포함되어 너무 많은 검색 결과가 나오게 되고, 결국 내가 원하는 검색 결과를 찾기까지 시간이 많이 소비된다.\n바로 이런 경우를 위해 PHPStorm에서 손쉽게 원하는 폴더를 검색 대상에 제외시킬 수 있게 \u0026lsquo;설정\u0026rsquo;창에서 손쉽게 변경 할 수 있다. (JetBrains 관련 된 모든 툴도 해보진 않았지만 적용이 가능하지 않을까 싶다.)\n※ 참고사항\n 윈도우 OS 환경 한글 Plug in 세팅 된 PHPStorm 사용 검색 관련 된 PHPStorm 단축키  Ctrl + Shift + F : 프로젝트내 전체 검색    1.설정창에서 특정 폴더 검색 제외 시키기 ★ 적용 방법\n PHPStorm 설정(Setting)창 열기 (단축키: Ctrl + Alt + S) 디렉토리(영어버전도 directory지 않을까요?) 메뉴를 클릭 디렉토리창에서 제외를 원하는 폴더에 우측을 클릭 후 제외됨(Alt+E) 클릭  2.제외시키기 적용 후 확인해보기 [적용 전 - 프로젝트 내 검색]\n 아래와 같이 public폴더에 있는 모든 내용이 나온다.  [적용 후 - 프로젝트 내 검색]\n 아래와 같이 더 이상 public 폴더가 검색 대상에서 제외된다.  ","date":"2022년 1월 25일","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg loading=\"lazy\" decoding=\"async\" src=\"/images/thumb/2022/thumb-tool_phpstorm_exclusion_folder_hu6fec502c64bf8906541a07ff0e506b73_73225_650x0_resize_q100_h2_box_3.webp\" alt=\"\" class=\"img-fluid w-100 rounded\" width=\"650\" height=\"\" onerror=\"this.onerror='null';this.src='\\/images\\/thumb\\/2022\\/thumb-tool_phpstorm_exclusion_folder_hu6fec502c64bf8906541a07ff0e506b73_73225_650x0_resize_box_3.png'\"\u003e\n \n \n \n\n\n","permalink":"/tool/phpstorm_exclusion_folder/","tags":["phpstorm","setting"],"title":"PHPStorm \u0026 Webstorm에서 특정 폴더 검색 제외하기"},{"categories":["tool"],"contents":"시작하기에 앞서.. 2022년부터는 제대로 된 나만의 블로그를 만들어서 FrontEnd와 관련 된 개발 이야기/나의 생각들과 좋아하는 것들을 다이어리 처럼 기록해 보고 싶었다. 그래서 블로그 생성을 위해 구글링을 하게 되었고 그 결과 Hugo + Netlify + Foresty을 활용해 기본 블로그를 세팅한 후 포스트를 올리기 위한 마크다운 편집기가 필요했다.\n한참 전에 typora를 잠깐 써보았는데 좋은 기억이 있어서 오랜만에 다시 쓸려고 하니 유료화가 되어 있었다. 헉!!하고 5초 정도 놀라긴 했지만 좋은 프로그램을 돈주고 쓰는걸 아까워 하는 스타일이 아니라 유료 라이센스를 구매하고 (3대의 기기에서 사용도 가능!!) 이왕 돈 주고 쓰는거 제대로 써보자 하는 마음이 들었다.\n마크다운 쓰는 형식은 워낙 익숙해져서 문제는 없었지만 다양한 이미지 자료 (특히 에버노트의 스샷 기능을 많이 활용중)를 일일히 github에 올리고 또 마크다운 이미지 형식으로 적어주는게 너무 번거롭게 느껴져 어떻게 해야하나 하고 있었는데, typora에는 마크다운 형식에 손쉽게 이미지를 업로드 할 수 있게 해주는 설정이 추가되었던 것이다. (무야호!!)\n일단 회사컴은 윈도우 버전이기에 IT회사원 신동갓 | Typora 이미지 삽입 자동 업로드(window) 자료를 보고 따라하니 초보자인 나도 손쉽게 자동 이미지 업로드 세팅을 완료했었다.\n문제는 집에서 맥북으로 세팅하려하니 윈도우 os와 똑같이 할 수 가 없었다. (ㅠㅠ왜 맥에서는 PicGo-Core \u0026gt; open config file이 없는 것이냐..)\n맥에서는 윈도우에서처럼 picGoCore 업로드 세팅이 안되기 때문에 새로운 방법을 찾아야 했다. 구글링 결과 무료 오픈 소스인 uPic으로 자동 이미지 업로드 세팅을 도전해 보기로 했다.\n※ 참조 자료\n typora 공식 문서 blog.svend.cc/upic/en/ 자료  1.typora 설정 세팅  설정 \u0026gt; 이미지 창의 첫번째 선택란은 upload image로 선택한다. 밑의 3개의 체크란에 체크를 해준다. Image Uploader 선택란에서 uPic을 선택해준다.  2.터미널에서 upic 세팅 -터미널 창에서 아래의 메세지를 입력해주자.\n1$brew install bigwig-club/brew/upic --cask -gihub 에서 release 다운(uPicd.zip) 받은 후 프로그램 intall\n3.맥북 시스템 환경 설정 세팅 -맥북 \u0026lsquo;시스템 환경 설정 \u0026gt; 확장 프로그램 \u0026gt; Finder 확장 프로그램\u0026rsquo; 창에서 uPic 선택\n-스샷을 위한 시스템 환경 정 \u0026gt; 보안 및 개인정보 보호 \u0026gt; 개인 정보 보호 \u0026gt; 화면 기록 \u0026gt; uPic 허용\n5.github에 이미지 호스팅 연결 시키기  자신의 github 계정에 사용하는 이미지 자료들을 업로드할 repository가 있는 상태여야 합니다. (github에서 repository를 생성하는 설명은 따로 추가하지 않겠습니다.)\n github access token 발급 1.설정창 클릭\n2.Developer settings 클릭\n3.Personal access tokens 클릭 \u0026gt; Generate new token 클릭\n4.new token 세팅\n 어디에 access가 되는지 간단히 note란에 메모 작성 토큰 만료 기간 설정 (자주 토큰을 바꿔주는게 보안적으로 더 안전하겠죠? 전 귀찮아서 no expiration) 아래 이미지처럼 체크란 체크하고 Update token 클릭 token 생성 완료 → token 코드 복사   한 번 생성된 토큰 내용은 생성 시에만 확인이 가능하니 보안이 잘 되는 것에 기록해두는 것도 좋을거 같습니다. 전 다른 컴에도 세팅하다가 토큰을 잊어버려 토큰을 재발급 후 다시 세팅을 해주었답니다.\n uPic 환경 설정 세팅  맥 메뉴 막대 있는 곳에 uPic 프로그램을 선택 후 설정 창에 들어갈 수 있습니다.\n -uPic 환경 설정 \u0026gt; Host 창 \u0026gt; github 추가\n★ 우측 설정창 내용 추가하기\n 현재 제가 github에서 사용하는 이미지 저장소 repository 스샷을 참고해서 uPic 설정창에는 본인의 Repository 내용을 적용해주자.  저는 blog.image.server Repository에 루트에서 2022 이름의 폴더를 생성하고 그 안에 이미지 저장 세팅을 할려고 했습니다.     uPic 설정창 관련 내용 입력    Owner : JJuiceCode\n  Repo : blog.image.server\n  Token : github에서 생성한 access token\n  Domain : 비어있게 놔둔다.\n  Use jsDeliver CDN ... : 여기에 체크하게 되면 typora에서 인증 실패가 뜬다. 체크하지 않는다.\n  save key : 2022/{year}_{month}_{day}_{random}{.suffix}\n  repository 루트 경로가 아닌 저와 같이 2022라는 하위 폴더에 저장을 하고 싶다면 위에 내용처럼 폴더명을 표시해줘야 합니다.\n  원래는 {hour}{minute}{second}도 추가해주었지만 우리가 실제 사용하는 시간내용이 아닌 타임스탬프 내용처럼 나와 삭제했습니다.\n  저는 대부분의 이미지가 선택영역 스샷으로 이미지를 가져오는 편이라 {filename}을 추가하면 이미지 네이밍이 너무 길어져서 날짜 시간 정보와 random 자동 파일명을 지정해 주었습니다.\n    내용 입력 완료 후 validate 버튼 누른 후 save 하기  6.설정 완료 후 확인해보기 typora에서 확인 typora 설정 \u0026gt; 이미지 \u0026gt; Image upload setting 창에서 \u0026lsquo;Test Uploader\u0026rsquo; 버튼을 누르면 아래와 같이 \u0026lsquo;인증 성공\u0026rsquo; 표시가 나와야 한다.\n7.typora에 이미지 붙여넣기  uPic프로그램으로(메뉴막대에 활성화되어있다면) \u0026lsquo;upload from screenshot\u0026rsquo; 클릭 후 선택영역을 스샷 하면 자동으로 github 저장소에 이미지가 업로드가 된 후 그 상태로 바로 typora에 ctrl + v 를 누르면 업로드 된 이미지가 붙여넣기가 됩니다.( 이미지가 복사할때 한 번, 붙여넣기 할때 두 번 이렇게 중첩되서 총 2개의 이미지가 업로드 되지 않는다. 스샷하는 순간 업로드 되고 복사할때는 업로드 되어 스샤 한번에 딱 하나의 이미지만 업로드 된다.) 저 같은 경우 스샷은 대부분 에버노트를 활용하기 때문에 에버노트 스샷 후 ctrl + v 붙여넣기로도 아래와 같이 typora에서 github 저장소에 이미지를 업로드 한다. (참고로 에버노트 스샷을 활용한다고 하면 활성화 되어있는 uPic 프로그램을 OFF 해도 에버노트 스샷 \u0026gt; typora 붙여넣기 \u0026gt; 자동 업로드 기능은 문제없이 사용가능)  로컬 typora가 아닌 웹상에 올린 이미지 확인해보기 마무리 하며.. 프로그래밍적으로 많은 지식을 알고 있다면 pyhton또는 go를 활용해 조금 더 쉽게 자동 업로드가 가능하겠지만 많이 부족한 나에게 이정도 세팅만으로 이정도 편하게 이미지를 스샷하고 컨텐츠를 만들 수 있다는 것에 너무 기쁘고 감사하다.\n과거에 요것 저것 기웃거리며 블로그를 어설프게 만들거 어설픈 컨텐츠를 만들어 올리고 관두기를 반복했었다. 하지만 2022년 올해부터 만큼은 꾸준하게 즐거운 마음으로 틈틈히 내가 알게 된 것을 느끼는 것들 좋아하는 것들에 관해 써볼려고 한다.\n더 이상 컨텐츠의 소비자가 아닌 생산자가 되기 위해 JJuice 최선을 다해보자꾸나!!\n","date":"2022년 1월 24일","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg loading=\"lazy\" decoding=\"async\" src=\"/images/thumb/2022/blogthumb_typora_main_hu359627d5f000cea4eb04c22ada0a9106_9798_650x0_resize_q100_h2_box_3.webp\" alt=\"\" class=\"img-fluid w-100 rounded\" width=\"650\" height=\"\" onerror=\"this.onerror='null';this.src='\\/images\\/thumb\\/2022\\/blogthumb_typora_main_hu359627d5f000cea4eb04c22ada0a9106_9798_650x0_resize_box_3.png'\"\u003e\n \n \n \n\n\n","permalink":"/tool/typora_macos_autoimageupload/","tags":["github","uPic","typora"],"title":"Typora 이미지 자동 업로드 (mac 환경)"}]
